Package scss.calculation;

Helpers

  letter = ['a'..'z'] | ['A'..'Z'];
  digit = ['0'..'9'];

  string_char = [[' '..'~'] - '"'] | '"' '"';

  cr = 13;
  lf = 10;
  tab = 9;

Tokens

  // prefix
  dollar = '$';
  hash = '#';
  dot = '.';

  // Separators

  l_brace = '{';
  r_brace = '}';

  l_par = '(';
  r_par = ')';

  comma = ',';
  semicolon = ';';

  // Operators

  assign = '=';
  colon  = ':';

  and = '&&';
  or = '||';

  eq = '==';
  neq = '!=';
  lt = '<';
  lteq = '<=';
  gt = '>';
  gteq = '>=';

  add = '+';
  sub = '-';
  mul = '*';
  div = '/';
  mod = '%';
  not = '!';

  // at_operators
  mixin = '@mixin';
  include = '@include';

  // Keywords

  true = 'true';
  false = 'false';
  null = 'null';

  // Identifiers and literals

  identifier =  (letter | digit | '-' | '_' )*;

  color = '#' (letter | digit)*;

  string_literal = '"' string_char* '"';

  integer_literal = digit+;

  // Blank

  blank = (' ' | cr | lf | tab)+;

Ignored Tokens
  blank;

Productions

  stylesheet =
    statement*;

  statement =
    {assigment} [first]:comma_value colon [second]:comma_value [rest]:comma_value* semicolon |
    {mixin} mixin identifier l_par [first]:comma_value [second]:comma_value* r_par block |
    {include} include [name]:comma_value l_par [first]:function_call [rest]:function_call* r_par semicolon |
    {ruleset} [first]:comma_value block ;

  block =
    {statement} l_brace statement* r_brace ;

  function_call =
    {call} [name]:comma_value l_par [first]:function_call [second]:function_call* r_par |
    {simple} comma_value ;

  comma_value =
    {comma} comma comma_value |
    {simple} variable ;

  variable =
    {dollar} dollar variable |
    {dot} dot variable |
    {simple} unit ;

  unit =
    {perc} unit mod |
    {simple} value ;

  value =
    {string} identifier |
    {term} term ;

  term =
    {true} true |
    {color} color |
    {number} integer_literal |
    {false} false |
    {null} null;


