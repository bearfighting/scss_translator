/* This file was generated by SableCC (http://www.sablecc.org/). */

package scss.node;

import scss.analysis.*;

@SuppressWarnings("nls")
public final class AFunctionReturn extends PFunctionReturn
{
    private TReturn _return_;
    private PConditions _conditions_;
    private TSemi _semi_;

    public AFunctionReturn()
    {
        // Constructor
    }

    public AFunctionReturn(
        @SuppressWarnings("hiding") TReturn _return_,
        @SuppressWarnings("hiding") PConditions _conditions_,
        @SuppressWarnings("hiding") TSemi _semi_)
    {
        // Constructor
        setReturn(_return_);

        setConditions(_conditions_);

        setSemi(_semi_);

    }

    @Override
    public Object clone()
    {
        return new AFunctionReturn(
            cloneNode(this._return_),
            cloneNode(this._conditions_),
            cloneNode(this._semi_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFunctionReturn(this);
    }

    public TReturn getReturn()
    {
        return this._return_;
    }

    public void setReturn(TReturn node)
    {
        if(this._return_ != null)
        {
            this._return_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._return_ = node;
    }

    public PConditions getConditions()
    {
        return this._conditions_;
    }

    public void setConditions(PConditions node)
    {
        if(this._conditions_ != null)
        {
            this._conditions_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._conditions_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._return_)
            + toString(this._conditions_)
            + toString(this._semi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._return_ == child)
        {
            this._return_ = null;
            return;
        }

        if(this._conditions_ == child)
        {
            this._conditions_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._return_ == oldChild)
        {
            setReturn((TReturn) newChild);
            return;
        }

        if(this._conditions_ == oldChild)
        {
            setConditions((PConditions) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
