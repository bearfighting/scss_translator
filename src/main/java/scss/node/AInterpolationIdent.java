/* This file was generated by SableCC (http://www.sablecc.org/). */

package scss.node;

import scss.analysis.*;

@SuppressWarnings("nls")
public final class AInterpolationIdent extends PIdent
{
    private THash _hash_;
    private TBlockstart _blockstart_;
    private TDollar _dollar_;
    private TIdentifier _identifier_;
    private TBlockend _blockend_;

    public AInterpolationIdent()
    {
        // Constructor
    }

    public AInterpolationIdent(
        @SuppressWarnings("hiding") THash _hash_,
        @SuppressWarnings("hiding") TBlockstart _blockstart_,
        @SuppressWarnings("hiding") TDollar _dollar_,
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") TBlockend _blockend_)
    {
        // Constructor
        setHash(_hash_);

        setBlockstart(_blockstart_);

        setDollar(_dollar_);

        setIdentifier(_identifier_);

        setBlockend(_blockend_);

    }

    @Override
    public Object clone()
    {
        return new AInterpolationIdent(
            cloneNode(this._hash_),
            cloneNode(this._blockstart_),
            cloneNode(this._dollar_),
            cloneNode(this._identifier_),
            cloneNode(this._blockend_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAInterpolationIdent(this);
    }

    public THash getHash()
    {
        return this._hash_;
    }

    public void setHash(THash node)
    {
        if(this._hash_ != null)
        {
            this._hash_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._hash_ = node;
    }

    public TBlockstart getBlockstart()
    {
        return this._blockstart_;
    }

    public void setBlockstart(TBlockstart node)
    {
        if(this._blockstart_ != null)
        {
            this._blockstart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blockstart_ = node;
    }

    public TDollar getDollar()
    {
        return this._dollar_;
    }

    public void setDollar(TDollar node)
    {
        if(this._dollar_ != null)
        {
            this._dollar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dollar_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public TBlockend getBlockend()
    {
        return this._blockend_;
    }

    public void setBlockend(TBlockend node)
    {
        if(this._blockend_ != null)
        {
            this._blockend_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blockend_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._hash_)
            + toString(this._blockstart_)
            + toString(this._dollar_)
            + toString(this._identifier_)
            + toString(this._blockend_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._hash_ == child)
        {
            this._hash_ = null;
            return;
        }

        if(this._blockstart_ == child)
        {
            this._blockstart_ = null;
            return;
        }

        if(this._dollar_ == child)
        {
            this._dollar_ = null;
            return;
        }

        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._blockend_ == child)
        {
            this._blockend_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._hash_ == oldChild)
        {
            setHash((THash) newChild);
            return;
        }

        if(this._blockstart_ == oldChild)
        {
            setBlockstart((TBlockstart) newChild);
            return;
        }

        if(this._dollar_ == oldChild)
        {
            setDollar((TDollar) newChild);
            return;
        }

        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(this._blockend_ == oldChild)
        {
            setBlockend((TBlockend) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
