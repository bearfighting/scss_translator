/* This file was generated by SableCC (http://www.sablecc.org/). */

package scss.node;

import scss.analysis.*;

@SuppressWarnings("nls")
public final class AVariableStatement extends PStatement
{
    private TVariable _variable_;
    private TColon _colon_;
    private PValues _values_;
    private TDefault _default_;
    private TSemi _semi_;

    public AVariableStatement()
    {
        // Constructor
    }

    public AVariableStatement(
        @SuppressWarnings("hiding") TVariable _variable_,
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") PValues _values_,
        @SuppressWarnings("hiding") TDefault _default_,
        @SuppressWarnings("hiding") TSemi _semi_)
    {
        // Constructor
        setVariable(_variable_);

        setColon(_colon_);

        setValues(_values_);

        setDefault(_default_);

        setSemi(_semi_);

    }

    @Override
    public Object clone()
    {
        return new AVariableStatement(
            cloneNode(this._variable_),
            cloneNode(this._colon_),
            cloneNode(this._values_),
            cloneNode(this._default_),
            cloneNode(this._semi_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariableStatement(this);
    }

    public TVariable getVariable()
    {
        return this._variable_;
    }

    public void setVariable(TVariable node)
    {
        if(this._variable_ != null)
        {
            this._variable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variable_ = node;
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public PValues getValues()
    {
        return this._values_;
    }

    public void setValues(PValues node)
    {
        if(this._values_ != null)
        {
            this._values_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._values_ = node;
    }

    public TDefault getDefault()
    {
        return this._default_;
    }

    public void setDefault(TDefault node)
    {
        if(this._default_ != null)
        {
            this._default_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._default_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._variable_)
            + toString(this._colon_)
            + toString(this._values_)
            + toString(this._default_)
            + toString(this._semi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._variable_ == child)
        {
            this._variable_ = null;
            return;
        }

        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._values_ == child)
        {
            this._values_ = null;
            return;
        }

        if(this._default_ == child)
        {
            this._default_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._variable_ == oldChild)
        {
            setVariable((TVariable) newChild);
            return;
        }

        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._values_ == oldChild)
        {
            setValues((PValues) newChild);
            return;
        }

        if(this._default_ == oldChild)
        {
            setDefault((TDefault) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
