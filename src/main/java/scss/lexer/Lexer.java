/* This file was generated by SableCC (http://www.sablecc.org/). */

package scss.lexer;

import java.io.*;
import scss.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNull(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIn(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDefault(line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUnit(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEllipsis(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLparen(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRparen(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlockstart(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlockend(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLbrack(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRbrack(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTil(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemi(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDollar(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAt(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoubleAnd(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THash(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColoncolon(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTimes(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPerc(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqeq(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNoteq(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPipeEq(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTildEq(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMixin(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFunction(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtElse(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtIf(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtFor(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtWhile(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtEach(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInclude(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImport(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturn(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrom(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThrough(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPoundDefault(line, pos); }
    Token new50(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVariable(text, line, pos); }
    Token new51(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new52(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(text, line, pos); }
    Token new53(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumberLiteral(text, line, pos); }
    Token new54(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColor(text, line, pos); }
    Token new55(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUrl(text, line, pos); }
    Token new56(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new57(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {34, 34, 6}, {35, 35, 7}, {36, 36, 8}, {37, 37, 9}, {38, 38, 10}, {40, 40, 11}, {41, 41, 12}, {42, 42, 13}, {43, 43, 14}, {44, 44, 15}, {45, 45, 16}, {46, 46, 17}, {47, 47, 18}, {48, 57, 19}, {58, 58, 20}, {59, 59, 21}, {60, 60, 22}, {61, 61, 23}, {62, 62, 24}, {64, 64, 25}, {65, 90, 26}, {91, 91, 27}, {93, 93, 28}, {95, 95, 29}, {97, 98, 30}, {99, 99, 31}, {100, 100, 32}, {101, 101, 33}, {102, 102, 34}, {103, 103, 35}, {104, 104, 36}, {105, 105, 37}, {106, 106, 30}, {107, 107, 38}, {108, 108, 30}, {109, 109, 39}, {110, 110, 40}, {111, 111, 30}, {112, 112, 41}, {113, 113, 30}, {114, 114, 42}, {115, 115, 43}, {116, 116, 44}, {117, 117, 45}, {118, 122, 30}, {123, 123, 46}, {124, 124, 47}, {125, 125, 48}, {126, 126, 49}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 50}, {100, 100, 51}, },
            {{32, 33, 52}, {34, 34, 53}, {35, 126, 52}, },
            {{48, 57, 54}, {65, 70, 55}, {97, 102, 56}, },
            {},
            {},
            {{38, 38, 57}, },
            {},
            {},
            {{42, 42, 58}, },
            {},
            {},
            {{46, 46, 59}, {48, 57, 60}, },
            {{46, 46, 61}, {48, 57, 62}, },
            {{42, 42, 63}, {47, 47, 64}, },
            {{45, 45, 65}, {46, 46, 66}, {48, 57, 67}, {65, 90, 68}, {95, 95, 69}, {97, 122, 70}, },
            {{58, 58, 71}, },
            {},
            {},
            {{61, 61, 72}, },
            {},
            {{48, 57, 73}, {65, 90, 74}, {95, 95, 75}, {97, 100, 76}, {101, 101, 77}, {102, 102, 78}, {103, 104, 76}, {105, 105, 79}, {106, 108, 76}, {109, 109, 80}, {110, 113, 76}, {114, 114, 81}, {115, 118, 76}, {119, 119, 82}, {120, 122, 76}, },
            {{45, 45, 65}, {48, 57, 83}, {65, 122, -21}, },
            {},
            {},
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 95, -28}, {97, 108, 70}, {109, 109, 84}, {110, 122, 70}, },
            {{45, 95, -28}, {97, 100, 70}, {101, 101, 85}, {102, 122, 70}, },
            {{45, 108, -33}, {109, 109, 86}, {110, 119, 70}, {120, 120, 87}, {121, 122, 70}, },
            {{45, 95, -28}, {97, 113, 70}, {114, 114, 88}, {115, 122, 70}, },
            {{45, 113, -36}, {114, 114, 89}, {115, 122, 70}, },
            {{45, 95, -28}, {97, 121, 70}, {122, 122, 90}, },
            {{45, 95, -28}, {97, 101, 70}, {102, 102, 91}, {103, 109, 70}, {110, 110, 92}, {111, 122, 70}, },
            {{45, 95, -28}, {97, 103, 70}, {104, 104, 93}, {105, 122, 70}, },
            {{45, 108, -33}, {109, 109, 94}, {110, 114, 70}, {115, 115, 95}, {116, 122, 70}, },
            {{45, 95, -28}, {97, 116, 70}, {117, 117, 96}, {118, 122, 70}, },
            {{45, 95, -28}, {97, 98, 70}, {99, 99, 97}, {100, 115, 70}, {116, 116, 98}, {117, 119, 70}, {120, 120, 99}, {121, 122, 70}, },
            {{45, 95, -28}, {97, 97, 100}, {98, 122, 70}, },
            {{45, 122, -28}, },
            {{45, 103, -40}, {104, 104, 101}, {105, 122, 70}, },
            {{45, 113, -36}, {114, 114, 102}, {115, 122, 70}, },
            {},
            {{61, 61, 103}, {124, 124, 104}, },
            {},
            {{61, 61, 105}, },
            {},
            {{101, 101, 106}, },
            {{32, 126, -8}, },
            {{34, 34, 107}, },
            {{48, 102, -9}, },
            {{48, 102, -9}, },
            {{48, 102, -9}, },
            {},
            {},
            {{48, 57, 108}, },
            {{46, 57, -18}, },
            {{46, 46, 109}, },
            {{48, 57, 62}, },
            {{0, 41, 110}, {42, 42, 111}, {43, 65535, 110}, },
            {{0, 9, 112}, {10, 10, 113}, {11, 12, 112}, {13, 13, 114}, {14, 65535, 112}, },
            {{45, 122, -28}, },
            {{48, 57, 62}, },
            {{45, 122, -21}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {},
            {},
            {{45, 45, 115}, {48, 57, 116}, {65, 90, 117}, {95, 95, 118}, {97, 122, 119}, },
            {{45, 122, -75}, },
            {{45, 122, -75}, },
            {{45, 122, -75}, },
            {{45, 95, -75}, {97, 97, 120}, {98, 107, 119}, {108, 108, 121}, {109, 122, 119}, },
            {{45, 95, -75}, {97, 110, 119}, {111, 111, 122}, {112, 116, 119}, {117, 117, 123}, {118, 122, 119}, },
            {{45, 95, -75}, {97, 101, 119}, {102, 102, 124}, {103, 108, 119}, {109, 109, 125}, {110, 110, 126}, {111, 122, 119}, },
            {{45, 95, -75}, {97, 104, 119}, {105, 105, 127}, {106, 122, 119}, },
            {{45, 95, -75}, {97, 100, 119}, {101, 101, 128}, {102, 122, 119}, },
            {{45, 95, -75}, {97, 103, 119}, {104, 104, 129}, {105, 122, 119}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 95, -28}, {97, 102, 70}, {103, 103, 130}, {104, 122, 70}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 95, -28}, {97, 110, 70}, {111, 111, 131}, {112, 122, 70}, },
            {{45, 95, -28}, {97, 97, 132}, {98, 122, 70}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 121, -38}, {122, 122, 133}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 95, -28}, {97, 107, 70}, {108, 108, 134}, {109, 122, 70}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 95, -28}, {97, 99, 70}, {100, 100, 135}, {101, 122, 70}, },
            {{45, 113, -36}, {114, 114, 136}, {115, 122, 70}, },
            {{45, 107, -98}, {108, 108, 137}, {109, 122, 70}, },
            {},
            {},
            {},
            {{102, 102, 138}, },
            {{32, 126, -8}, },
            {{48, 57, 108}, },
            {},
            {{0, 65535, -65}, },
            {{0, 41, 139}, {42, 42, 111}, {43, 46, 139}, {47, 47, 140}, {48, 65535, 139}, },
            {{0, 65535, -66}, },
            {},
            {{10, 10, 141}, },
            {{45, 122, -75}, },
            {{45, 122, -75}, },
            {{45, 122, -75}, },
            {{45, 122, -75}, },
            {{45, 122, -75}, },
            {{45, 95, -75}, {97, 98, 119}, {99, 99, 142}, {100, 122, 119}, },
            {{45, 95, -75}, {97, 114, 119}, {115, 115, 143}, {116, 122, 119}, },
            {{45, 95, -75}, {97, 113, 119}, {114, 114, 144}, {115, 122, 119}, },
            {{45, 95, -75}, {97, 109, 119}, {110, 110, 145}, {111, 122, 119}, },
            {{45, 122, -75}, },
            {{45, 95, -75}, {97, 111, 119}, {112, 112, 146}, {113, 122, 119}, },
            {{45, 98, -122}, {99, 99, 147}, {100, 122, 119}, },
            {{45, 95, -75}, {97, 119, 119}, {120, 120, 148}, {121, 122, 119}, },
            {{45, 95, -75}, {97, 115, 119}, {116, 116, 149}, {117, 122, 119}, },
            {{45, 104, -82}, {105, 105, 150}, {106, 122, 119}, },
            {{45, 122, -28}, },
            {{45, 108, -33}, {109, 109, 151}, {110, 122, 70}, },
            {{45, 99, -102}, {100, 100, 152}, {101, 122, 70}, },
            {{45, 122, -28}, },
            {{45, 107, -98}, {108, 108, 153}, {109, 122, 70}, },
            {{45, 122, -28}, },
            {{45, 110, -90}, {111, 111, 154}, {112, 122, 70}, },
            {{45, 122, -28}, {123, 123, 155}, },
            {{97, 97, 156}, },
            {{0, 41, 157}, {42, 42, 158}, {43, 65535, 157}, },
            {},
            {},
            {{45, 103, -84}, {104, 104, 159}, {105, 122, 119}, },
            {{45, 100, -83}, {101, 101, 160}, {102, 122, 119}, },
            {{45, 122, -75}, },
            {{45, 98, -122}, {99, 99, 161}, {100, 122, 119}, },
            {{45, 110, -80}, {111, 111, 162}, {112, 122, 119}, },
            {{45, 95, -75}, {97, 107, 119}, {108, 108, 163}, {109, 122, 119}, },
            {{45, 104, -82}, {105, 105, 164}, {106, 122, 119}, },
            {{45, 95, -75}, {97, 116, 119}, {117, 117, 165}, {118, 122, 119}, },
            {{45, 107, -149}, {108, 108, 166}, {109, 122, 119}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 122, -28}, },
            {{45, 116, -42}, {117, 117, 167}, {118, 122, 70}, },
            {{32, 33, 168}, {34, 34, 169}, {35, 124, 168}, {125, 125, 170}, {126, 126, 168}, },
            {{117, 117, 171}, },
            {{0, 65535, -141}, },
            {{0, 41, 139}, {42, 42, 158}, {43, 65535, -113}, },
            {{45, 122, -75}, },
            {{45, 122, -75}, },
            {{45, 115, -130}, {116, 116, 172}, {117, 122, 119}, },
            {{45, 113, -124}, {114, 114, 173}, {115, 122, 119}, },
            {{45, 116, -151}, {117, 117, 174}, {118, 122, 119}, },
            {{45, 109, -125}, {110, 110, 175}, {111, 122, 119}, },
            {{45, 113, -124}, {114, 114, 176}, {115, 122, 119}, },
            {{45, 100, -83}, {101, 101, 177}, {102, 122, 119}, },
            {{45, 102, -87}, {103, 103, 178}, {104, 122, 70}, },
            {{32, 126, -157}, },
            {{34, 34, 179}, },
            {{32, 126, -157}, },
            {{108, 108, 180}, },
            {{45, 104, -82}, {105, 105, 181}, {106, 122, 119}, },
            {{45, 115, -130}, {116, 116, 182}, {117, 122, 119}, },
            {{45, 95, -75}, {97, 99, 119}, {100, 100, 183}, {101, 122, 119}, },
            {{45, 122, -75}, },
            {{45, 109, -125}, {110, 110, 184}, {111, 122, 119}, },
            {{45, 122, -75}, },
            {{45, 103, -40}, {104, 104, 185}, {105, 122, 70}, },
            {{32, 126, -157}, },
            {{116, 116, 186}, },
            {{45, 110, -80}, {111, 111, 187}, {112, 122, 119}, },
            {{45, 122, -75}, },
            {{45, 100, -83}, {101, 101, 188}, {102, 122, 119}, },
            {{45, 122, -75}, },
            {{45, 122, -28}, },
            {},
            {{45, 109, -125}, {110, 110, 189}, {111, 122, 119}, },
            {{45, 122, -75}, },
            {{45, 122, -75}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 56, 56, 56, 56, -1, -1, 23, 18, 3, 20, 5, 6, 27, 25, 16, 29, 17, 28, 51, 14, 15, 13, 33, 11, 19, 51, 9, 10, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 3, 51, 51, 7, -1, 8, 12, 32, -1, -1, 52, 54, 54, 54, 21, 26, -1, 53, -1, 53, -1, -1, 51, -1, 51, 51, 51, 51, 24, 31, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 3, 51, 3, 3, 51, 51, 3, 39, 1, 51, 3, 3, 51, 3, 3, 3, 51, 51, 51, 34, 22, 35, -1, -1, 53, 4, -1, -1, -1, 57, 57, 50, 50, 50, 50, 50, 50, 50, 50, 50, 40, 50, 50, 50, 50, 50, 3, 51, 51, 3, 51, 3, 51, 51, -1, -1, 57, 57, 50, 50, 41, 50, 50, 50, 50, 50, 50, 47, 3, 0, 51, -1, -1, -1, -1, 43, 38, 50, 50, 50, 50, 50, 50, 51, -1, -1, 55, -1, 50, 50, 50, 36, 50, 42, 51, -1, -1, 50, 45, 50, 46, 48, 2, 50, 44, 37, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
