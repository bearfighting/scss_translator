/* This file was generated by SableCC (http://www.sablecc.org/). */

package scss.calculation.node;

import scss.calculation.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleVariable extends PVariable
{
    private PUnit _unit_;

    public ASimpleVariable()
    {
        // Constructor
    }

    public ASimpleVariable(
        @SuppressWarnings("hiding") PUnit _unit_)
    {
        // Constructor
        setUnit(_unit_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleVariable(
            cloneNode(this._unit_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleVariable(this);
    }

    public PUnit getUnit()
    {
        return this._unit_;
    }

    public void setUnit(PUnit node)
    {
        if(this._unit_ != null)
        {
            this._unit_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unit_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._unit_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._unit_ == child)
        {
            this._unit_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._unit_ == oldChild)
        {
            setUnit((PUnit) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
