/* This file was generated by SableCC (http://www.sablecc.org/). */

package scss.calculation.analysis;

import java.util.*;
import scss.calculation.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStylesheet(AStylesheet node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssigmentStatement(AAssigmentStatement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMixinStatement(AMixinStatement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIncludeStatement(AIncludeStatement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARulesetStatement(ARulesetStatement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStatementBlock(AStatementBlock node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACallFunctionCall(ACallFunctionCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleFunctionCall(ASimpleFunctionCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommaCommaValue(ACommaCommaValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleCommaValue(ASimpleCommaValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADollarVariable(ADollarVariable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADotVariable(ADotVariable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleVariable(ASimpleVariable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPercUnit(APercUnit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleUnit(ASimpleUnit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringValue(AStringValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermValue(ATermValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATrueTerm(ATrueTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAColorTerm(AColorTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumberTerm(ANumberTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFalseTerm(AFalseTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANullTerm(ANullTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDollar(TDollar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTHash(THash node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAssign(TAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLteq(TLteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGteq(TGteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAdd(TAdd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSub(TSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMul(TMul node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMixin(TMixin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInclude(TInclude node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNull(TNull node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColor(TColor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStringLiteral(TStringLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIntegerLiteral(TIntegerLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
